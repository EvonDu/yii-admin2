<?php
namespace layui\widgets;

use yii\helpers\ArrayHelper;
use yii\helpers\Html;
use layui\field\Edit;
use layui\field\FileInput;
use layui\field\ImageInput;
use layui\field\Other;

class ActiveField extends \yii\widgets\ActiveField {

    public function input($type, $options = [])
    {
        return parent::input($type, $options); // TODO: Change the autogenerated stub
    }

    public function textInput($options = [])
    {
        $label = $this->model->getAttributeLabel($this->attribute);
        $options["placeholder"] = $label;
        return parent::textInput($options); // TODO: Change the autogenerated stub
    }

    public function passwordInput($options = [])
    {
        $label = $this->model->getAttributeLabel($this->attribute);
        $options["placeholder"] = $label;
        return parent::passwordInput($options); // TODO: Change the autogenerated stub
    }

    public function dropDownList($items, $options = []){
        echo parent::dropDownList($items, $options);
    }

    public function checkbox($options = [], $enclosedByLabel = true)
    {
        //获取字段信息
        $name = Html::getInputName($this->model, $this->attribute);
        $id = Html::getInputId($this->model, $this->attribute);
        $value = Html::getAttributeValue($this->model,$this->attribute);

        //设置hidden
        $hidden = Html::tag("input","",['name'=>$name,'value'=>0,'type'=>'hidden']);

        //设置checkbox
        $options = array_merge([
            'id'=>$id,
            'name'=>$name,
            'value'=>1,
            'type'=>'checkbox',
        ],$this->inputOptions,$options);
        if(!empty($value))
            $options["checked"]="";
        if(!isset($options["title"]))
            $options["title"] = "ON";
        $checkbox = Html::tag("input","",$options);

        //返回
        $this->parts['{input}'] = $hidden.$checkbox;
        return $this;
    }

    public function checkboxList($items, $options = [])
    {
        //获取字段信息
        $name = Html::getInputName($this->model, $this->attribute);
        $id = Html::getInputId($this->model, $this->attribute);
        $value = Html::getAttributeValue($this->model,$this->attribute);

        //设置属性
        $options = array_merge([
            'id'=>$id,
            'name'=>$name."[]",
            'type'=>'checkbox',
        ],$this->inputOptions,$options);

        //遍历生成
        $list = [];
        foreach ($items as $item_key=>$item_value){
            $item_options = $options;
            $item_options["title"]=$item_value;
            $item_options["value"]=$item_key;
            if(is_array($value) && in_array($item_key,$value))
                $item_options["checked"]="";
            $list[]=Html::tag("input","",$item_options);
        }

        //返回
        $this->parts['{input}'] = implode("\n",$list);
        return $this;
    }

    public function radioList($items, $options = [])
    {
        //获取字段信息
        $name = Html::getInputName($this->model, $this->attribute);
        $id = Html::getInputId($this->model, $this->attribute);
        $value = Html::getAttributeValue($this->model,$this->attribute);

        //设置属性
        $options = array_merge([
            'id'=>$id,
            'name'=>$name."[]",
            'type'=>'radio',
        ],$this->inputOptions,$options);
        if(isset($this->form->options["class"]) && strstr($this->form->options["class"],"layui-form-pane") != false)
            $this->options["pane"] = "";

        //遍历生成
        $list = [];
        foreach ($items as $item_key=>$item_value){
            $item_options = $options;
            $item_options["title"]=$item_value;
            if($value == $item_key)
                $item_options["checked"]="";
            $list[]=Html::tag("input","",$item_options);
        }

        //返回
        $this->parts['{input}'] = implode("\n",$list);
        return $this;
    }

    public function submitButton($options = []){
        $submit = Html::submitButton("提交",array_merge(["class"=>"layui-btn"],$options));
        $reset = Html::button("重置",["class"=>"layui-btn layui-btn-primary"]);
        $this->parts['{input}'] = "$submit\n$reset";
        return $this;
    }

    public function edit($options = []){
        $options = array_merge([
            'model' => $this->model,
            'attribute' => $this->attribute,
        ],$options);
        $this->parts['{input}'] = Edit::widget($options);
        return $this;
    }

    public function fileInput($options = []){
        $options = array_merge([
            'model' => $this->model,
            'attribute' => $this->attribute,
        ],$options);
        $this->parts['{input}'] = FileInput::widget($options);
        return $this;
    }

    public function imageInput($options = []){
        $options = array_merge([
            'model' => $this->model,
            'attribute' => $this->attribute,
        ],$options);
        $this->parts['{input}'] = ImageInput::widget($options);
        return $this;
    }

    public function other($widget,$options = []){
        $otherOptions = [
            'widget'=>$widget ,
            'model' => $this->model,
            'attribute' => $this->attribute,
            'options'=>$options
        ];
        $this->parts['{input}'] = Other::widget($otherOptions);
        return $this;
    }
}
